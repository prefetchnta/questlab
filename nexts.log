+
+
+
    2024-12-25 @ 15:49
    ~~~~~~~~~~~~~~~~~~
    十几年前的代码挖出来竟然还能跑，方法早就过时了，只能留个纪念。
+
+
+
    2024-11-11 @ 16:26
    ~~~~~~~~~~~~~~~~~~
    还是点阵字体好看啊！
+
+
+
    2024-09-25 @ 17:33
    ~~~~~~~~~~~~~~~~~~
    OpenCV 很多地方都是左下角为起点的。内置的字体真的是难看！
+
+
+
    2024-09-25 @ 16:18
    ~~~~~~~~~~~~~~~~~~
    最新发现 OpenCV 打开摄像头设备巨慢！！！
+
+
+
    2023-05-10 @ 15:18
    ~~~~~~~~~~~~~~~~~~
    SetWindowText() 等一些窗口操作函数在没有处理消息队列的情况下会卡死。
    所以涉及到 Windows 窗口操作有关的函数最好放在消息处理的主线程里，避免
    不必要的多线程死锁问题。
+
+
+
    2023-04-12 @ 18:19
    ~~~~~~~~~~~~~~~~~~
    把默认控制台宿主程序换掉真是巨坑啊，以后再也不用控制台程序了。
+
+
+
    2023-04-12 @ 15:07
    ~~~~~~~~~~~~~~~~~~
    发现不一定是 Win11，通过注册表来判断是否是终端启动更合理。
+
+
+
    2023-04-11 @ 18:27
    ~~~~~~~~~~~~~~~~~~
    终于绕过去了，还有一些小问题要修正！
+
+
+
    2023-04-10 @ 18:23
    ~~~~~~~~~~~~~~~~~~
    Windows 11 下默认把命令行程序都放到终端里运行了，导致原来的一些控制台程序
    窗口定位出现问题。后来发现用 conhost.exe 来启动控制台程序不会跑到终端里面
    去。那么在 Windows 11 下要想办法识别一个 EXE 是不是控制台程序，完美的方法
    通过解析 PE 头结构来实现。
+
+
+
    2023-02-08 @ 16:39
    ~~~~~~~~~~~~~~~~~~
    我擦，网易的成交量成交额数据是不一样的！！！
+
+
+
    2023-02-08 @ 10:18
    ~~~~~~~~~~~~~~~~~~
    网易的数据爬不到了，切换一个更好的数据源~
+
+
+
    2023-01-17 @ 15:17
    ~~~~~~~~~~~~~~~~~~
    晕，可视化竟然先做完了！
+
+
+
    2022-12-26 @ 17:08
    ~~~~~~~~~~~~~~~~~~
    蜡烛图和一些常用的指标图已经搞完了，下一步要把横轴事件系统和竖轴
    压力支撑系统搞起来，再回到 QstTrade 里来做可视化。
    等可视化差不多了，就再堆几个技术指标，然后后面弄数据分析。
+
+
+
    2022-10-11 @ 14:29
    ~~~~~~~~~~~~~~~~~~
    系统相关类的图标弄的差不多了，接下去要把各种编程语言的图标加进去。
+
+
+
    2022-09-20 @ 12:18
    ~~~~~~~~~~~~~~~~~~
    原来之前 XP 下时不时不绘制文本的问题也和这个有关，终于告一段落了。
+
+
+
    2022-09-20 @ 12:04
    ~~~~~~~~~~~~~~~~~~
    最终还是把多线程这个功能去掉了（支持 XP 的情况下），那样改更合理。
    搞什么 C++17 呢，除了把代码越搞越复杂，没啥好处。也许作者认为语法比
    较时髦吧。
+
+
+
    2022-09-19 @ 18:40
    ~~~~~~~~~~~~~~~~~~
    好吧，在 EditView::LayoutLine() 里空调一次 std:async() 就解决了。
+
+
+
    2022-09-19 @ 14:20
    ~~~~~~~~~~~~~~~~~~
    终于发现问题所在了：原来 Scintilla v5.2.0 增加了多线程处理的功能，用到
    了 std:async()，只要代码里编译进了这个功能，但是没有使用到，XP 下退出时
    就会崩溃或者死锁，Win10 下是没有问题的。应该是 VisualC++ CRT 初始化释放
    代码兼容性的问题。那是把这个去掉，还是在启动时空调一次 std:async() 呢？
+
+
+
    2022-09-18 @ 19:43
    ~~~~~~~~~~~~~~~~~~
    好消息，之前的 Scintilla v5.0.2 是没有这个问题的，明天逐个版本试过去
    比较一下哪里改了就可以发现问题的所在。
+
+
+
    2022-09-16 @ 08:31
    ~~~~~~~~~~~~~~~~~~
    这两天一直在查 SciTE 的一个问题：在 XP 下如果打开应用不输入任何
    文本，关闭后 SciTE 的进程会一直卡在那里（虽然窗口已经关闭了）。
    经过调试后发现，是因为主动调用了 FreeLibrary 释放动态库有关，如果
    不主动释放动态库，会报一个出错的异常。经过深入跟踪发现一旦释放库
    Scintilla.dll 里的 ?dllmain_crt_process_detach@@YAH_N@Z 这个函数会
    一直卡住。这个应该是新版 VC++ 编译器自己加入的代码，可能是在 XP 下
    有 BUG？还是其他什么的，估计 SciTE 的作者自己也没怎么测试过。
+
+
+
    2022-09-14 @ 15:36
    ~~~~~~~~~~~~~~~~~~
    为什么加载 DLL 库后再释放会导致进程异常出错或者卡在那里？？？
+
+
+
    2022-09-13 @ 15:21
    ~~~~~~~~~~~~~~~~~~
    字符串双引号，字符单引号！！！BCB 编译器连这个都检查不出来？？？
+
+
+
    2022-09-07 @ 21:28
    ~~~~~~~~~~~~~~~~~~
    今天遇到了两个坑：（1）SciTE 的 code.page 属性是全局的，不是每个文件
    都有不同的值。这就造成了不同编码类型的文件不能在一个 SciTE 进程里编辑；
    （2）管理员方式运行批处理，当前目录是系统目录，而不是批处理所在的目录。
+
+
+
    2022-09-07 @ 09:41
    ~~~~~~~~~~~~~~~~~~
    人生如梦，竟然十年时间过去了，计划中的很多东西还没有实现。。。。。。
    前两天将 X64 下与 Python 有关的东西全部清理出去了，原因很简单：
    Python 的第三方库实在是太乱了，根本无法维护，后面也不会再碰 Python 有
    关的东西了，太浪费时间。后来我意识到 X64 和 X86 应该是一个整体，所以
    将 X64 下与 X86 重复的功能也清理出去了。
    时间久了有些东西也忘得差不多了，所以我把一些文档也恢复出来，后面也会
    继续写。现在回过头去看看当年写的东西，还是蛮有意思的。看了当年的代码
    和设计，对当年的自己肃然起敬，有些东西还是蛮复杂和变态的。。。。。。
+
+
+
    2013-11-15 @ 13:13
    ~~~~~~~~~~~~~~~~~~
    目标：二进制分析工具。
+
+
+
    2013-11-06 @ 21:00
    ~~~~~~~~~~~~~~~~~~
    突然之间发现 SciTE 才是纯洁的存在，Notepad++ 真是杂草丛生。
    需要整理一下配置文件的管理方式。
+
+
+
    2013-10-12 @ 09:43
    ~~~~~~~~~~~~~~~~~~
    注意 QstView2D 和 xIMGLAB 里某些结构体成员位置改变后，相关插件需要重编译。
+
+
+
    2013-09-27 @ 11:10
    ~~~~~~~~~~~~~~~~~~
    加入 Notepad++ 是为了增强文本文件的编辑功能，以后还会增加
    更多的外部工具。工具选择标准：绿色、可文本化配置、有扩展性。
    然后，针对所有加载到列表的磁盘文件，增加调用外部工具的功能，这样就可以
    外挂各种编译器，使系统可以有类似 IDE 的 EDIT 和 MAKE 功能。
+
+
+
    2013-09-05 @ 09:55
    ~~~~~~~~~~~~~~~~~~
    问题文档保留到问题解决的那一刻。
+
+
+
    2013-09-04 @ 13:56
    ~~~~~~~~~~~~~~~~~~
    放弃使用外部配置文件来做资源路由。使用二进制插件可以提供更高的
    灵活性，并且能更好地与整体代码结合在一起。
+
+
+
    2013-08-22 @ 09:35
    ~~~~~~~~~~~~~~~~~~
    接下来需要一个二进制观察工具，如果没有现成的组件就用 GDI 直接绘制显示。
+
+
+
    2013-08-21 @ 15:51
    ~~~~~~~~~~~~~~~~~~
    多帧图片文件尽量使用多帧图片接口，减少内存占用，加快加载速度。
+
+
+
    2013-08-19 @ 21:31
    ~~~~~~~~~~~~~~~~~~
    （1）ResRouter：给定资源类型，翻译成路径，结合文件名发出
                    文件加载请求，返回文件数据；
    （2）ResLoader：给定资源类型、文件路径、文件名获取文件数
                    据，返回给资源路由器；
    （3）资源路由表由外部配置文件决定，做资源类型（对应 QstMount 槽位）
                    到文件路径（对应 QstMount 挂载名）的映射；
    （4）脱离环境时，加载文件的 Cache 层位于 ResLoader 模块。
+
+
+
    2013-08-19 @ 15:53
    ~~~~~~~~~~~~~~~~~~
    新 FMTz 插件文件匹配表放法规则：
    （1）有固定扩展名，放入 s_findx 表，有 Magic 的放在无 Magic 的之前；
    （2）无固定扩展名或有 Magic 的，放入 s_loadx 表，无 Magic 的需要用文件名
         来匹配（支持不定扩展名匹配）。
+
+
+
    2013-08-14 @ 10:10
    ~~~~~~~~~~~~~~~~~~
    从内存加载封包文件的时候原始内存块不能释放掉；
    出于内存空间考虑，读包对象内只保存文件读取对象，不克隆其数据；
    而媒体播放等其他小文件型接口则需要自己克隆一份文件数据。
+
+
+
    2013-08-09 @ 09:56
    ~~~~~~~~~~~~~~~~~~
    进度缓慢，龟速爬行。
+
+
+
    2013-07-09 @ 10:34
    ~~~~~~~~~~~~~~~~~~
    他妈的婊子！！！！！
+
+
+
    2013-06-08 @ 09:37
    ~~~~~~~~~~~~~~~~~~
    接下来的任务：
    （1）开源 OCR 引擎的封装（短期）；
    （2）D3D9 API 接口的封装（长期）；
    （3）二进制观察分析工具的开发（长期）；
    （4）GV 插件的移植：神奇传说系列、伊苏、吉里吉里、ALICE-SOFT（中期）；
    （5）伊苏 3D 游戏引擎的实现（长期）。
+
+
+
    2013-05-09 @ 10:37
    ~~~~~~~~~~~~~~~~~~
    游戏的根目录名尽量使用英文，否则可能会造成无法导入。
+
+
+
    2013-04-17 @ 13:32
    ~~~~~~~~~~~~~~~~~~
    接下来的重头戏是 3D 部分的开发了。这次要从零开始，从基础做起。
+
+
+
    2013-04-08 @ 13:39
    ~~~~~~~~~~~~~~~~~~
    目前还没有想好这些绘图指令能派上什么用处，纯属测试和娱乐。
+
+
+
    2013-04-06 @ 22:38
    ~~~~~~~~~~~~~~~~~~
    GameViewer 这部分要暂停一下了，要优先实现其他新的功能。
+
+
+
    2013-04-06 @ 21:43
    ~~~~~~~~~~~~~~~~~~
    终于完成了当前所有类型的 FMTz 插件。
    这标志着 GameViewer 2D 渲染部分的框架已经重建完成了！！！
    从最早算起，一共历时283天，40周加3天，9个月零9天。
+
+
+
    2013-03-29 @ 12:45
    ~~~~~~~~~~~~~~~~~~
    离完成 GameViewer 的 2D 部分只剩一步之遥。
+
+
+
    2013-03-24 @ 19:35
    ~~~~~~~~~~~~~~~~~~
    计划有变，应先尽快引入 OpenCV SDK 。
+
+
+
    2013-03-22 @ 09:47
    ~~~~~~~~~~~~~~~~~~
    用脚本主动调用滤镜接口，而不是被动地传参数，这样就解决了传递
    滤镜参数的问题。本来想用以前写的 Pandora Script 来实现，但是
    可能太过灵活了，所以最后选择了 XMLCALL 来实现这个功能。
    接下来要做的工作有：
    （1）实现一个最基本的图片滤镜插件；
    （2）实现一个最基本的命令扩展插件；
    （3）把以前 NScripter 的代码移过来。
+
+
+
    2013-03-20 @ 15:54
    ~~~~~~~~~~~~~~~~~~
    该如何传递参数给滤镜接口呢？
+
+
+
    2013-03-16 @ 22:23
    ~~~~~~~~~~~~~~~~~~
    完成文本浏览功能之后是图片浏览的滤镜功能。
    这次要能让各种不同的滤镜排成一个列表，自由地组合。
    之后再加上摄像头插件，整个 GameViewer 的 2D 部分算是完美重现了！
+
+
+
    2013-03-06 @ 22:57
    ~~~~~~~~~~~~~~~~~~
    写个静态网页真是太苦逼了！！！
+
+
+
    2013-03-05 @ 10:56
    ~~~~~~~~~~~~~~~~~~
    下一步，暂时想到的文本浏览部件的功能：
    （1）可手动切换文本的字符编码；
    （2）可实时编辑文件并另保存文件；
    （3）各种 Script / Shader 的语法高亮；
    （4）可直接发起执行各种 Script / Shader 。
+
+
+
    2013-03-01 @ 13:18
    ~~~~~~~~~~~~~~~~~~
    为下一步的动作做好了准备。。。。。。
    等实现了文本浏览部件后，整个 2D 体系就基本完成了。
    文本浏览部件将使用 Scintilla 控件来实现。
+
+
+
    2013-01-30 @ 21:27
    ~~~~~~~~~~~~~~~~~~
    下一步的开发计划：
    （1）ZIP 文件的最小解包支持；
    （2）微软 SZDD 文件的解码支持；
    （3）RAR 文件的解包支持。
+
+
+
    2013-01-28 @ 22:06
    ~~~~~~~~~~~~~~~~~~
    为摄像头插件的出现，提前做好了准备。。。。。。
+
+
+
    2013-01-27 @ 23:13
    ~~~~~~~~~~~~~~~~~~
    第一条开发日志记录，开始记录开发日志。
+
+
+